一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。求该青蛙跳上一个n级的台阶总
共有多少种跳法。
分析：根据前一个分析n=0;f(n)=0;
n=1,f(n)=1;其他，f(n)=f(n-1)+f(n-2)+f(n-3)+...+f(1)+f(0);又因为f(n-1)=f(n-2)+f(n-3)+...+f(1)+f(0)
所以f(n)=2*f(n-1);
public class Solution {
    public int JumpFloorII(int target) {
        if(target==0)
            return 0;
        if(target==1)
            return 1;
        int fn=1;
        int result=0;
        for(int i=2;i<=target;i++){
            result=2*fn;
            fn=result;
        }
        return result;
    }
}

第二种方法：
n级台阶，最后一级肯定的跳，前n-1级每级都有两种跳法，跳或者不跳所以总共有2^(n-1)种跳法。
public class Solution {
    public int JumpFloorII(int target) {
        if(target==0){
            return 0;
        }
        return (int) Math.pow(2,target-1);
    }
}
注意pow()算完是double型数据要强制转换成int型。
输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。
分析：
一个数减一与自己做&操作会把右边的1都变成0，所以该数有多少个1就可以进行几次这样的操作
public class Solution {
    public int NumberOf1(int n) {
        int count=0;
        while(n!=0){
            count++;
            n=n&(n-1);
        }
        return count;
    }
}

第二种：一个数与1做&操作，把1左移一位，统计&之后不等于0个数，
public class Solution {
    public int NumberOf1(int n) {
        int count=0;
        int flag=1;
        while(flag!=0){
            if((flag&n)!=0)
                count++;
            flag=flag<<1;
        }
        return count;
    }
}
